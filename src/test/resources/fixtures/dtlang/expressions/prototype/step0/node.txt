 > create:
atom:2
<<<seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)>>>


 > create:
fun:3
<<<seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)>>>


 > create:
expr:4 cachable
seq (
  <<<let (x, 5)>>>,
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
13...

 > create:
atom:5
seq (
  <<<let (x, 5)>>>,
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
13...

 > create:
fun:6
seq (
  <<<let (x, 5)>>>,
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
13...

 > create:
expr:7 cachable
seq (
  let (<<<x>>>, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
13...

 > create:
atom:8
seq (
  let (<<<x>>>, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
13...

 > create:
path:9
seq (
  let (<<<x>>>, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
13...

 > create:
segment:10
seq (
  let (<<<x>>>, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
13...

 > create:
expr:11 cachable
seq (
  let (x, <<<5>>>),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
13...

 > create:
atom:12
seq (
  let (x, <<<5>>>),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
13...

 > create:
expr:13 cachable
seq (
  let (x, 5),
  <<<let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4)>>>,
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
atom:14
seq (
  let (x, 5),
  <<<let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4)>>>,
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
fun:15
seq (
  let (x, 5),
  <<<let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4)>>>,
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
expr:16 cachable
seq (
  let (x, 5),
  let (<<<client.account[type:in.account[1].type][1].sum>>>, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
atom:17
seq (
  let (x, 5),
  let (<<<client.account[type:in.account[1].type][1].sum>>>, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
path:18
seq (
  let (x, 5),
  let (<<<client.account[type:in.account[1].type][1].sum>>>, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
segment:19
seq (
  let (x, 5),
  let (<<<client>>>.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
segment:20
seq (
  let (x, 5),
  let (client.<<<account[type:in.account[1].type][1]>>>.sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
index:21
seq (
  let (x, 5),
  let (client.account<<<[type:in.account[1].type]>>>[1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
expr:22 cachable
seq (
  let (x, 5),
  let (client.account[type:<<<in.account[1].type>>>][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
atom:23
seq (
  let (x, 5),
  let (client.account[type:<<<in.account[1].type>>>][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
path:24
seq (
  let (x, 5),
  let (client.account[type:<<<in.account[1].type>>>][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
segment:25
seq (
  let (x, 5),
  let (client.account[type:<<<in>>>.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
segment:26
seq (
  let (x, 5),
  let (client.account[type:in.<<<account[1]>>>.type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
index:27
seq (
  let (x, 5),
  let (client.account[type:in.account<<<[1]>>>.type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
expr:28 cachable
seq (
  let (x, 5),
  let (client.account[type:in.account[<<<1>>>].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
atom:29
seq (
  let (x, 5),
  let (client.account[type:in.account[<<<1>>>].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
segment:30
seq (
  let (x, 5),
  let (client.account[type:in.account[1].<<<type>>>][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
index:31
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type]<<<[1]>>>.sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
expr:32 cachable
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][<<<1>>>].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
atom:33
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][<<<1>>>].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
segment:34
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].<<<sum>>>, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
expr:35 cachable
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, <<<in.sum+100_0001 + 1+ 2*3%4>>>),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
+:36
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1<<<+>>> 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
+:37
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 <<<+>>> 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
+:38
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum<<<+>>>100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
atom:39
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, <<<in.sum>>>+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
path:40
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, <<<in.sum>>>+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
segment:41
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, <<<in>>>.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
segment:42
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.<<<sum>>>+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
atom:43
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+<<<100_0001>>> + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
atom:44
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + <<<1>>>+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
%:45
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3<<<%>>>4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
*:46
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2<<<*>>>3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
atom:47
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ <<<2>>>*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
atom:48
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*<<<3>>>%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
atom:49
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%<<<4>>>),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
14...

 > create:
expr:50 cachable
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  <<<let (client.surname, "Mr."~in.surname~1+2*3%4)>>>,  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
atom:51
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  <<<let (client.surname, "Mr."~in.surname~1+2*3%4)>>>,  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
fun:52
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  <<<let (client.surname, "Mr."~in.surname~1+2*3%4)>>>,  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
expr:53 cachable
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (<<<client.surname>>>, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
atom:54
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (<<<client.surname>>>, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
path:55
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (<<<client.surname>>>, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
segment:56
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (<<<client>>>.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
segment:57
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.<<<surname>>>, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
expr:58 cachable
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, <<<"Mr."~in.surname~1+2*3%4>>>),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
~:59
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname<<<~>>>1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
~:60
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."<<<~>>>in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
atom:61
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, <<<"Mr.">>>~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
atom:62
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~<<<in.surname>>>~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
path:63
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~<<<in.surname>>>~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
segment:64
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~<<<in>>>.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
segment:65
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.<<<surname>>>~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
+:66
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1<<<+>>>2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
atom:67
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~<<<1>>>+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
%:68
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3<<<%>>>4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
*:69
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2<<<*>>>3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
atom:70
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+<<<2>>>*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
atom:71
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*<<<3>>>%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
atom:72
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%<<<4>>>),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
15...

 > create:
expr:73 cachable
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  <<<switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  )>>>,
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
atom:74
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  <<<switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  )>>>,
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
fun:75
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  <<<switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  )>>>,
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
expr:76 cachable
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    <<<case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    )>>>,
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
23...

 > create:
atom:77
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    <<<case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    )>>>,
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
23...

 > create:
fun:78
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    <<<case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    )>>>,
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
23...

 > create:
expr:79 cachable
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      <<<date("2016-03-04")-today()>month(5)>>>,
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
18...

 > create:
>:80
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()<<<>>>>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
18...

 > create:
-:81
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")<<<->>>today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
18...

 > create:
atom:82
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      <<<date("2016-03-04")>>>-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
18...

 > create:
fun:83
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      <<<date("2016-03-04")>>>-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
18...

 > create:
expr:84 cachable
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date(<<<"2016-03-04">>>)-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
18...

 > create:
atom:85
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date(<<<"2016-03-04">>>)-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
18...

 > create:
atom:86
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-<<<today()>>>>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
18...

 > create:
fun:87
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-<<<today()>>>>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
18...

 > create:
atom:88
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()><<<month(5)>>>,
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
18...

 > create:
fun:89
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()><<<month(5)>>>,
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
18...

 > create:
expr:90 cachable
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(<<<5>>>),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
18...

 > create:
atom:91
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(<<<5>>>),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
18...

 > create:
expr:92 cachable
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      <<<seq (
        return (),
        break ()
      )>>>
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
22...

 > create:
atom:93
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      <<<seq (
        return (),
        break ()
      )>>>
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
22...

 > create:
fun:94
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      <<<seq (
        return (),
        break ()
      )>>>
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
22...

 > create:
expr:95 cachable
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        <<<return ()>>>,
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
20...

 > create:
atom:96
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        <<<return ()>>>,
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
20...

 > create:
fun:97
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        <<<return ()>>>,
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
20...

 > create:
expr:98 cachable
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        <<<break ()>>>
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
21...

 > create:
atom:99
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        <<<break ()>>>
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
21...

 > create:
fun:100
seq (
  let (x, 5),
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        <<<break ()>>>
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
21...

 > create:
expr:101 cachable
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    <<<case (22+size(x) = 0, continue())>>>,
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
atom:102
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    <<<case (22+size(x) = 0, continue())>>>,
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
fun:103
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    <<<case (22+size(x) = 0, continue())>>>,
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
expr:104 cachable
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (<<<22+size(x) = 0>>>, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
=:105
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) <<<=>>> 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
+:106
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22<<<+>>>size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
atom:107
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (<<<22>>>+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
atom:108
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+<<<size(x)>>> = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
fun:109
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+<<<size(x)>>> = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
expr:110 cachable
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(<<<x>>>) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
atom:111
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(<<<x>>>) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
path:112
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(<<<x>>>) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
segment:113
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(<<<x>>>) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
atom:114
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = <<<0>>>, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
expr:115 cachable
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, <<<continue()>>>),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
atom:116
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, <<<continue()>>>),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
fun:117
...2
  let (client.account[type:in.account[1].type][1].sum, in.sum+100_0001 + 1+ 2*3%4),
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, <<<continue()>>>),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
24...

 > create:
expr:118 cachable
...3
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    <<<case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )>>>
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
atom:119
...3
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    <<<case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )>>>
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
fun:120
...3
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    <<<case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )>>>
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
expr:121 cachable
...3
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (<<<true>>>,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
25...

 > create:
atom:122
...3
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (<<<true>>>,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
25...

 > create:
path:123
...3
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (<<<true>>>,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
25...

 > create:
segment:124
...3
  let (client.surname, "Mr."~in.surname~1+2*3%4),  // which one is the best || ~ ^
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (<<<true>>>,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
25...

 > create:
expr:125 cachable
...4
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      <<<for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )>>>
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
atom:126
...4
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      <<<for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )>>>
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
fun:127
...4
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      <<<for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )>>>
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
expr:128 cachable
...4
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (<<<i>>>, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
26...

 > create:
atom:129
...4
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (<<<i>>>, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
26...

 > create:
path:130
...4
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (<<<i>>>, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
26...

 > create:
segment:131
...4
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (<<<i>>>, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
26...

 > create:
expr:132 cachable
...4
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, <<<1>>>, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
26...

 > create:
atom:133
...4
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, <<<1>>>, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
26...

 > create:
expr:134 cachable
...4
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, <<<50>>>,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
26...

 > create:
atom:135
...4
  switch (
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, <<<50>>>,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
26...

 > create:
expr:136 cachable
...5
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        <<<seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )>>>
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
atom:137
...5
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        <<<seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )>>>
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
fun:138
...5
    case (
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        <<<seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )>>>
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
expr:139 cachable
...6
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          <<<let (x, x+1)>>>,
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
28...

 > create:
atom:140
...6
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          <<<let (x, x+1)>>>,
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
28...

 > create:
fun:141
...6
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          <<<let (x, x+1)>>>,
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
28...

 > create:
expr:142 cachable
...6
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (<<<x>>>, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
28...

 > create:
atom:143
...6
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (<<<x>>>, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
28...

 > create:
path:144
...6
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (<<<x>>>, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
28...

 > create:
segment:145
...6
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (<<<x>>>, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
28...

 > create:
expr:146 cachable
...6
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, <<<x+1>>>),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
28...

 > create:
+:147
...6
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x<<<+>>>1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
28...

 > create:
atom:148
...6
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, <<<x>>>+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
28...

 > create:
path:149
...6
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, <<<x>>>+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
28...

 > create:
segment:150
...6
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, <<<x>>>+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
28...

 > create:
atom:151
...6
      date("2016-03-04")-today()>month(5),
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+<<<1>>>),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
28...

 > create:
expr:152 cachable
...7
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          <<<switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )>>>
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
atom:153
...7
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          <<<switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )>>>
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
fun:154
...7
      seq (
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          <<<switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )>>>
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
expr:155 cachable
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            <<<case (x>10, continue (i))>>>,
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
atom:156
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            <<<case (x>10, continue (i))>>>,
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
fun:157
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            <<<case (x>10, continue (i))>>>,
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
expr:158 cachable
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (<<<x>10>>>, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
>:159
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x<<<>>>>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
atom:160
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (<<<x>>>>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
path:161
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (<<<x>>>>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
segment:162
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (<<<x>>>>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
atom:163
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x><<<10>>>, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
expr:164 cachable
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, <<<continue (i)>>>),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
atom:165
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, <<<continue (i)>>>),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
fun:166
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, <<<continue (i)>>>),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
expr:167 cachable
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (<<<i>>>)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
atom:168
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (<<<i>>>)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
path:169
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (<<<i>>>)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
segment:170
...8
        return (),
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (<<<i>>>)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
30...

 > create:
expr:171 cachable
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            <<<case (x<0, call (doIt))>>>
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
atom:172
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            <<<case (x<0, call (doIt))>>>
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
fun:173
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            <<<case (x<0, call (doIt))>>>
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
expr:174 cachable
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (<<<x<0>>>, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
<:175
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<<<<>>>0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
atom:176
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (<<<x>>><0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
path:177
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (<<<x>>><0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
segment:178
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (<<<x>>><0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
atom:179
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<<<<0>>>, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
expr:180 cachable
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, <<<call (doIt)>>>)
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
atom:181
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, <<<call (doIt)>>>)
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
fun:182
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, <<<call (doIt)>>>)
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
expr:183 cachable
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (<<<doIt>>>))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
atom:184
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (<<<doIt>>>))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
path:185
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (<<<doIt>>>))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
segment:186
...9
        break ()
      )
    ),
    case (22+size(x) = 0, continue()),
    case (true,
      for (i, 1, 50,
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (<<<doIt>>>))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)
31...

 > create:
expr:187 cachable
...15
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  <<<let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )>>>
)


 > create:
atom:188
...15
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  <<<let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )>>>
)


 > create:
fun:189
...15
        seq (
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  <<<let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )>>>
)


 > create:
expr:190 cachable
...16
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    <<<y>>>,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
atom:191
...16
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    <<<y>>>,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
path:192
...16
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    <<<y>>>,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
segment:193
...16
          let (x, x+1),
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    <<<y>>>,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
expr:194 cachable
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    <<<min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())>>>
  )
)


 > create:
&:195
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) <<<&>>> ! (true () | false ())
  )
)


 > create:
>=:196
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) <<<>=>>> round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
atom:197
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    <<<min(max((1+2*3)/4, 0), 10)>>> >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
fun:198
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    <<<min(max((1+2*3)/4, 0), 10)>>> >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
expr:199 cachable
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(<<<max((1+2*3)/4, 0)>>>, 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
atom:200
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(<<<max((1+2*3)/4, 0)>>>, 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
fun:201
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(<<<max((1+2*3)/4, 0)>>>, 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
expr:202 cachable
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max(<<<(1+2*3)/4>>>, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
/:203
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)<<</>>>4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
+:204
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1<<<+>>>2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
atom:205
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((<<<1>>>+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
*:206
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2<<<*>>>3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
atom:207
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+<<<2>>>*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
atom:208
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*<<<3>>>)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
atom:209
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/<<<4>>>, 0), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
expr:210 cachable
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, <<<0>>>), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
atom:211
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, <<<0>>>), 10) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
expr:212 cachable
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), <<<10>>>) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
atom:213
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), <<<10>>>) >= round(5.555_555__, 1) & ! (true () | false ())
  )
)


 > create:
atom:214
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= <<<round(5.555_555__, 1)>>> & ! (true () | false ())
  )
)


 > create:
fun:215
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= <<<round(5.555_555__, 1)>>> & ! (true () | false ())
  )
)


 > create:
expr:216 cachable
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(<<<5.555_555__>>>, 1) & ! (true () | false ())
  )
)


 > create:
atom:217
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(<<<5.555_555__>>>, 1) & ! (true () | false ())
  )
)


 > create:
expr:218 cachable
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, <<<1>>>) & ! (true () | false ())
  )
)


 > create:
atom:219
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, <<<1>>>) & ! (true () | false ())
  )
)


 > create:
!:220
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & <<<!>>> (true () | false ())
  )
)


 > create:
|:221
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () <<<|>>> false ())
  )
)


 > create:
atom:222
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (<<<true ()>>> | false ())
  )
)


 > create:
fun:223
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (<<<true ()>>> | false ())
  )
)


 > create:
atom:224
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | <<<false ()>>>)
  )
)


 > create:
fun:225
...17
          switch (
            case (x>10, continue (i)),
            case (x<0, call (doIt))
          )
        )
      )
    )
  ),
  let (
    y,
    min(max((1+2*3)/4, 0), 10) >= round(5.555_555__, 1) & ! (true () | <<<false ()>>>)
  )
)


 > merge:
expr 1 {
  result: atom 2 >> 1 {
    fun: fun 3 >> 2 {
      expr: expr 4 cachable >> 3 {
        result: atom 5 >> 4 {
          fun: fun 6 >> 5 {
            expr: expr 7 cachable >> 6 {
              result: atom 8 >> 7 {
                path: path 9 >> 8 {
                  segment: segment 10 >> 9 {
                    name: x
                  }
                }
              }
            }
            expr: expr 11 cachable >> 6 {
              result: atom 12 >> 11
            }
          }
        }
      }
      expr: expr 13 cachable >> 3 {
        result: atom 14 >> 13 {
          fun: fun 15 >> 14 {
            expr: expr 16 cachable >> 15 {
              result: atom 17 >> 16 {
                path: path 18 >> 17 {
                  segment: segment 19 >> 18 {
                    name: client
                  }
                  segment: segment 20 >> 18 {
                    name: account
                    index: index 21 >> 20 {
                      filter: expr 22 cachable >> 21 {
                        result: atom 23 >> 22 {
                          path: path 24 >> 23 {
                            segment: segment 25 >> 24 {
                              name: in
                            }
                            segment: segment 26 >> 24 {
                              name: account
                              index: index 27 >> 26 {
                                filter: expr 28 cachable >> 27 {
                                  result: atom 29 >> 28
                                }
                              }
                            }
                            segment: segment 30 >> 24 {
                              name: type
                            }
                          }
                        }
                      }
                    }
                    index: index 31 >> 20 {
                      filter: expr 32 cachable >> 31 {
                        result: atom 33 >> 32
                      }
                    }
                  }
                  segment: segment 34 >> 18 {
                    name: sum
                  }
                }
              }
            }
            expr: expr 35 cachable >> 15 {
              result: + 36 >> 35 {
                left: + 37 >> 36 {
                  left: + 38 >> 37 {
                    left: atom 39 >> 38 {
                      path: path 40 >> 39 {
                        segment: segment 41 >> 40 {
                          name: in
                        }
                        segment: segment 42 >> 40 {
                          name: sum
                        }
                      }
                    }
                    right: atom 43 >> 38
                  }
                  right: atom 44 >> 37
                }
                right: % 45 >> 36 {
                  left: * 46 >> 45 {
                    left: atom 47 >> 46
                    right: atom 48 >> 46
                  }
                  right: atom 49 >> 45
                }
              }
            }
          }
        }
      }
      expr: expr 50 cachable >> 3 {
        result: atom 51 >> 50 {
          fun: fun 52 >> 51 {
            expr: expr 53 cachable >> 52 {
              result: atom 54 >> 53 {
                path: path 55 >> 54 {
                  segment: segment 56 >> 55 {
                    name: client
                  }
                  segment: segment 57 >> 55 {
                    name: surname
                  }
                }
              }
            }
            expr: expr 58 cachable >> 52 {
              result: ~ 59 >> 58 {
                left: ~ 60 >> 59 {
                  left: atom 61 >> 60
                  right: atom 62 >> 60 {
                    path: path 63 >> 62 {
                      segment: segment 64 >> 63 {
                        name: in
                      }
                      segment: segment 65 >> 63 {
                        name: surname
                      }
                    }
                  }
                }
                right: + 66 >> 59 {
                  left: atom 67 >> 66
                  right: % 68 >> 66 {
                    left: * 69 >> 68 {
                      left: atom 70 >> 69
                      right: atom 71 >> 69
                    }
                    right: atom 72 >> 68
                  }
                }
              }
            }
          }
        }
      }
      expr: expr 73 cachable >> 3 {
        result: atom 74 >> 73 {
          fun: fun 75 >> 74 {
            expr: expr 76 cachable >> 75 {
              result: atom 77 >> 76 {
                fun: fun 78 >> 77 {
                  expr: expr 79 cachable >> 78 {
                    result: > 80 >> 79 {
                      left: - 81 >> 80 {
                        left: atom 82 >> 81 {
                          fun: fun 83 >> 82 {
                            expr: expr 84 cachable >> 83 {
                              result: atom 85 >> 84
                            }
                          }
                        }
                        right: atom 86 >> 81 {
                          fun: fun 87 >> 86
                        }
                      }
                      right: atom 88 >> 80 {
                        fun: fun 89 >> 88 {
                          expr: expr 90 cachable >> 89 {
                            result: atom 91 >> 90
                          }
                        }
                      }
                    }
                  }
                  expr: expr 92 cachable >> 78 {
                    result: atom 93 >> 92 {
                      fun: fun 94 >> 93 {
                        expr: expr 95 cachable >> 94 {
                          result: atom 96 >> 95 {
                            fun: fun 97 >> 96
                          }
                        }
                        expr: expr 98 cachable >> 94 {
                          result: atom 99 >> 98 {
                            fun: fun 100 >> 99
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            expr: expr 101 cachable >> 75 {
              result: atom 102 >> 101 {
                fun: fun 103 >> 102 {
                  expr: expr 104 cachable >> 103 {
                    result: = 105 >> 104 {
                      left: + 106 >> 105 {
                        left: atom 107 >> 106
                        right: atom 108 >> 106 {
                          fun: fun 109 >> 108 {
                            expr: expr 110 cachable >> 109 {
                              result: atom 111 >> 110 {
                                path: path 112 >> 111 {
                                  segment: segment 113 >> 112 {
                                    name: x
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      right: atom 114 >> 105
                    }
                  }
                  expr: expr 115 cachable >> 103 {
                    result: atom 116 >> 115 {
                      fun: fun 117 >> 116
                    }
                  }
                }
              }
            }
            expr: expr 118 cachable >> 75 {
              result: atom 119 >> 118 {
                fun: fun 120 >> 119 {
                  expr: expr 121 cachable >> 120 {
                    result: atom 122 >> 121 {
                      path: path 123 >> 122 {
                        segment: segment 124 >> 123 {
                          name: true
                        }
                      }
                    }
                  }
                  expr: expr 125 cachable >> 120 {
                    result: atom 126 >> 125 {
                      fun: fun 127 >> 126 {
                        expr: expr 128 cachable >> 127 {
                          result: atom 129 >> 128 {
                            path: path 130 >> 129 {
                              segment: segment 131 >> 130 {
                                name: i
                              }
                            }
                          }
                        }
                        expr: expr 132 cachable >> 127 {
                          result: atom 133 >> 132
                        }
                        expr: expr 134 cachable >> 127 {
                          result: atom 135 >> 134
                        }
                        expr: expr 136 cachable >> 127 {
                          result: atom 137 >> 136 {
                            fun: fun 138 >> 137 {
                              expr: expr 139 cachable >> 138 {
                                result: atom 140 >> 139 {
                                  fun: fun 141 >> 140 {
                                    expr: expr 142 cachable >> 141 {
                                      result: atom 143 >> 142 {
                                        path: path 144 >> 143 {
                                          segment: segment 145 >> 144 {
                                            name: x
                                          }
                                        }
                                      }
                                    }
                                    expr: expr 146 cachable >> 141 {
                                      result: + 147 >> 146 {
                                        left: atom 148 >> 147 {
                                          path: path 149 >> 148 {
                                            segment: segment 150 >> 149 {
                                              name: x
                                            }
                                          }
                                        }
                                        right: atom 151 >> 147
                                      }
                                    }
                                  }
                                }
                              }
                              expr: expr 152 cachable >> 138 {
                                result: atom 153 >> 152 {
                                  fun: fun 154 >> 153 {
                                    expr: expr 155 cachable >> 154 {
                                      result: atom 156 >> 155 {
                                        fun: fun 157 >> 156 {
                                          expr: expr 158 cachable >> 157 {
                                            result: > 159 >> 158 {
                                              left: atom 160 >> 159 {
                                                path: path 161 >> 160 {
                                                  segment: segment 162 >> 161 {
                                                    name: x
                                                  }
                                                }
                                              }
                                              right: atom 163 >> 159
                                            }
                                          }
                                          expr: expr 164 cachable >> 157 {
                                            result: atom 165 >> 164 {
                                              fun: fun 166 >> 165 {
                                                expr: expr 167 cachable >> 166 {
                                                  result: atom 168 >> 167 {
                                                    path: path 169 >> 168 {
                                                      segment: segment 170 >> 169 {
                                                        name: i
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    expr: expr 171 cachable >> 154 {
                                      result: atom 172 >> 171 {
                                        fun: fun 173 >> 172 {
                                          expr: expr 174 cachable >> 173 {
                                            result: < 175 >> 174 {
                                              left: atom 176 >> 175 {
                                                path: path 177 >> 176 {
                                                  segment: segment 178 >> 177 {
                                                    name: x
                                                  }
                                                }
                                              }
                                              right: atom 179 >> 175
                                            }
                                          }
                                          expr: expr 180 cachable >> 173 {
                                            result: atom 181 >> 180 {
                                              fun: fun 182 >> 181 {
                                                expr: expr 183 cachable >> 182 {
                                                  result: atom 184 >> 183 {
                                                    path: path 185 >> 184 {
                                                      segment: segment 186 >> 185 {
                                                        name: doIt
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      expr: expr 187 cachable >> 3 {
        result: atom 188 >> 187 {
          fun: fun 189 >> 188 {
            expr: expr 190 cachable >> 189 {
              result: atom 191 >> 190 {
                path: path 192 >> 191 {
                  segment: segment 193 >> 192 {
                    name: y
                  }
                }
              }
            }
            expr: expr 194 cachable >> 189 {
              result: & 195 >> 194 {
                left: >= 196 >> 195 {
                  left: atom 197 >> 196 {
                    fun: fun 198 >> 197 {
                      expr: expr 199 cachable >> 198 {
                        result: atom 200 >> 199 {
                          fun: fun 201 >> 200 {
                            expr: expr 202 cachable >> 201 {
                              result: / 203 >> 202 {
                                left: + 204 >> 203 {
                                  left: atom 205 >> 204
                                  right: * 206 >> 204 {
                                    left: atom 207 >> 206
                                    right: atom 208 >> 206
                                  }
                                }
                                right: atom 209 >> 203
                              }
                            }
                            expr: expr 210 cachable >> 201 {
                              result: atom 211 >> 210
                            }
                          }
                        }
                      }
                      expr: expr 212 cachable >> 198 {
                        result: atom 213 >> 212
                      }
                    }
                  }
                  right: atom 214 >> 196 {
                    fun: fun 215 >> 214 {
                      expr: expr 216 cachable >> 215 {
                        result: atom 217 >> 216
                      }
                      expr: expr 218 cachable >> 215 {
                        result: atom 219 >> 218
                      }
                    }
                  }
                }
                right: ! 220 >> 195 {
                  operand: | 221 >> 220 {
                    left: atom 222 >> 221 {
                      fun: fun 223 >> 222
                    }
                    right: atom 224 >> 221 {
                      fun: fun 225 >> 224
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

